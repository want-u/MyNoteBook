import java.util.Scanner;
public class Stars {
	public static void main(String[] args) {
		/*
		经典：打印金字塔
		要求：
		接收一个层数 totalLevel，打印出金字塔

		思路分析：
		1. 先打印一个矩形
		*****
		*****
		*****
		*****
		*****
		2. 打印半个金字塔
		*		第1层 有 1 个*
		**		第2层 有 2 个*
		***		第3层 有 3 个*
		****	第4层 有 4 个*
		*****	第5层 有 5 个*
		3. 打印整个金字塔
		     *		第1层 有 1 个*	2 * 1 - 1	有4(总层数-1)个空格
		    ***		第2层 有 3 个*	2 * 2 - 1	有3(总层数-1)个空格
		   *****	第3层 有 5 个*	2 * 3 - 1	有2(总层数-1)个空格
		  *******	第4层 有 7 个*	2 * 4 - 1	有1(总层数-1)个空格
		 *********	第5层 有 9 个*	2 * 5 - 1	有0(总层数-1)个空格
		4. 打印空心的金字塔
		     *     	// 第1层 有 1 个*	当前行的第一个位置是*，最后一个也是*
		    * *     // 第2层 有 2 个*	当前行的第一个位置是*，最后一个也是*
		   *   *	// 第3层 有 2 个*	当前行的第一个位置是*，最后一个也是*
		  *     *	// 第4层 有 2 个*	当前行的第一个位置是*，最后一个也是*
		 *********	// 第5层 有 9 个*	全部输出*
		*/
		int totalLevel = 10;
		for (int i = 1; i <= totalLevel; i++) {
			// 在输出*之前，先输出 空格
			for (int k = 1; k <= totalLevel - i; k ++) {
				System.out.print(" ");
			}
			// 控制打印每层的*个数
			for (int j = 1; j <= 2 * i - 1; j++) {
				// 当前行的第一个位置是*，最后一个也是*，最后一层全部是*
				if (j == 1 || j == 2 * i - 1 || i == totalLevel) {
					System.out.print("*");
				} else {
					System.out.print(" ");
				}
			}
			System.out.println();
		}
	}
}